{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.less","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/auth/sign-in/sign-in.component.html","webpack:///./src/app/components/auth/sign-in/sign-in.component.less","webpack:///./src/app/components/auth/sign-in/sign-in.component.ts","webpack:///./src/app/components/auth/sign-up/sign-up.component.html","webpack:///./src/app/components/auth/sign-up/sign-up.component.less","webpack:///./src/app/components/auth/sign-up/sign-up.component.ts","webpack:///./src/app/components/clients/add-edit-client/add-edit-client.component.html","webpack:///./src/app/components/clients/add-edit-client/add-edit-client.component.less","webpack:///./src/app/components/clients/add-edit-client/add-edit-client.component.ts","webpack:///./src/app/components/clients/client-detail/client-detail.component.html","webpack:///./src/app/components/clients/client-detail/client-detail.component.less","webpack:///./src/app/components/clients/client-detail/client-detail.component.ts","webpack:///./src/app/components/clients/client-list/client-list.component.html","webpack:///./src/app/components/clients/client-list/client-list.component.less","webpack:///./src/app/components/clients/client-list/client-list.component.ts","webpack:///./src/app/components/container/container.component.html","webpack:///./src/app/components/container/container.component.less","webpack:///./src/app/components/container/container.component.ts","webpack:///./src/app/components/dash-board/welcome/welcome.component.html","webpack:///./src/app/components/dash-board/welcome/welcome.component.less","webpack:///./src/app/components/dash-board/welcome/welcome.component.ts","webpack:///./src/app/components/invoice/invoice-form/invoice-form.component.html","webpack:///./src/app/components/invoice/invoice-form/invoice-form.component.less","webpack:///./src/app/components/invoice/invoice-form/invoice-form.component.ts","webpack:///./src/app/components/invoice/invoice-list/invoice-list.component.html","webpack:///./src/app/components/invoice/invoice-list/invoice-list.component.less","webpack:///./src/app/components/invoice/invoice-list/invoice-list.component.ts","webpack:///./src/app/components/navigation/header/header.component.html","webpack:///./src/app/components/navigation/header/header.component.less","webpack:///./src/app/components/navigation/header/header.component.ts","webpack:///./src/app/components/navigation/sidenav-list/sidenav-list.component.html","webpack:///./src/app/components/navigation/sidenav-list/sidenav-list.component.less","webpack:///./src/app/components/navigation/sidenav-list/sidenav-list.component.ts","webpack:///./src/app/helpers/debounce.helper.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/models/address.ts","webpack:///./src/app/models/client.ts","webpack:///./src/app/models/container.ts","webpack:///./src/app/models/invoice.ts","webpack:///./src/app/services/client.service.ts","webpack:///./src/app/services/invoice.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Components\r\nimport { WelcomeComponent } from './components/dash-board/welcome/welcome.component';\r\nimport { InvoiceListComponent } from './components/invoice/invoice-list/invoice-list.component';\r\nimport { ClientListComponent } from './components/clients/client-list/client-list.component';\r\nimport { AddEditClientComponent } from './components/clients/add-edit-client/add-edit-client.component';\r\nimport { SignInComponent } from './components/auth/sign-in/sign-in.component';\r\nimport { SignUpComponent } from './components/auth/sign-up/sign-up.component';\r\nimport { ClientDetailComponent } from './components/clients/client-detail/client-detail.component';\r\nimport { InvoiceFormComponent } from './components/invoice/invoice-form/invoice-form.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: WelcomeComponent },\r\n  { path: 'sign-in', component: SignInComponent },\r\n  { path: 'sign-up', component: SignUpComponent },\r\n  { path: 'invoices', component: InvoiceListComponent },\r\n  { path: 'add-edit-invoice', component: InvoiceFormComponent },\r\n  { path: 'clients', component: ClientListComponent },\r\n  { path: 'clients/:clientId', component: ClientDetailComponent },\r\n  { path: 'add-edit-client', component: AddEditClientComponent },\r\n  { path: 'add-edit-client/:id', component: AddEditClientComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"<mat-sidenav-container>\\r\\n    <mat-sidenav #sidenav role=\\\"navigation\\\">\\r\\n        <app-sidenav-list (closeSideNav)=\\\"sidenav.close()\\\"></app-sidenav-list>\\r\\n    </mat-sidenav>\\r\\n    <mat-sidenav-content>\\r\\n        <app-header (sideNavToggle)=\\\"sidenav.toggle()\\\"></app-header>\\r\\n        <main>\\r\\n            <div class=\\\"container\\\">\\r\\n                <router-outlet></router-outlet>\\r\\n            </div>\\r\\n        </main>\\r\\n    </mat-sidenav-content>\\r\\n</mat-sidenav-container>\"","module.exports = \"mat-sidenav-container,\\nmat-sidenav-content,\\nmats-sidenav {\\n  height: 100%;\\n}\\nmat-sidenav {\\n  width: 250px;\\n}\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.less']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n  opened: boolean;\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AlertModule } from 'ngx-bootstrap';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from './material.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n// Components\r\nimport { AppComponent } from './app.component';\r\nimport { InvoiceFormComponent } from './components/invoice/invoice-form/invoice-form.component';\r\nimport { WelcomeComponent } from './components/dash-board/welcome/welcome.component';\r\nimport { SignInComponent } from './components/auth/sign-in/sign-in.component';\r\nimport { SignUpComponent } from './components/auth/sign-up/sign-up.component';\r\nimport { InvoiceListComponent } from './components/invoice/invoice-list/invoice-list.component';\r\nimport { ClientListComponent } from './components/clients/client-list/client-list.component';\r\nimport { HeaderComponent } from './components/navigation/header/header.component';\r\nimport { SidenavListComponent } from './components/navigation/sidenav-list/sidenav-list.component';\r\nimport { ClientDetailComponent } from './components/clients/client-detail/client-detail.component';\r\nimport { AddEditClientComponent } from './components/clients/add-edit-client/add-edit-client.component';\r\nimport { ContainerComponent } from './components/container/container.component';\r\n\r\n// Services\r\nimport { InvoiceService } from './services/invoice.service';\r\nimport { ClientService } from './services/client.service';\r\n\r\n// Others\r\nimport { Debounce } from './helpers/debounce.helper';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    InvoiceFormComponent,\r\n    WelcomeComponent,\r\n    InvoiceListComponent,\r\n    ClientListComponent,\r\n    SignInComponent,\r\n    SignUpComponent,\r\n    HeaderComponent,\r\n    SidenavListComponent,\r\n    ClientDetailComponent,\r\n    AddEditClientComponent,\r\n    ContainerComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AlertModule.forRoot(),\r\n    FormsModule,\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    AppRoutingModule,\r\n    FlexLayoutModule\r\n  ],\r\n  providers: [InvoiceService, ClientService, Debounce],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","module.exports = \"<p>\\r\\n  sign-in works!\\r\\n</p>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.less']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","module.exports = \"<section class=\\\"signup-form\\\">\\r\\n  <form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(form)\\\">\\r\\n    <mat-form-field>\\r\\n      <input \\r\\n        type=\\\"email\\\" \\r\\n        matInput \\r\\n        placeholder=\\\"Your Email\\\" \\r\\n        ngModel name=\\\"email\\\" \\r\\n        email \\r\\n        required\\r\\n        #emailInput=\\\"ngModel\\\">\\r\\n        <mat-error *ngIf=\\\"emailInput.hasError('required')\\\">Email is required</mat-error>\\r\\n        <mat-error *ngIf=\\\"!emailInput.hasError('required')\\\">Email is invalid!</mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <input \\r\\n        type=\\\"password\\\" \\r\\n        matInput \\r\\n        placeholder=\\\"Your Password\\\" \\r\\n        ngModel name=\\\"password\\\" \\r\\n        required \\r\\n        minlength=\\\"6\\\"\\r\\n        #pwInput=\\\"ngModel\\\">\\r\\n        <mat-error *ngIf=\\\"pwInput.hasError('required')\\\">Password is required</mat-error>\\r\\n        <mat-error *ngIf=\\\"pwInput.hasError('minlength')\\\">Should be at least 6 characters</mat-error>\\r\\n    </mat-form-field>\\r\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"form.invalid\\\">Submit</button>\\r\\n  </form>\\r\\n</section>\"","module.exports = \"mat-form-field {\\n  width: 300px;\\n}\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.less']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  onSubmit(form: NgForm): void {\r\n    console.log('Form:', form.value);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container form\\\">\\r\\n  <form #clientForm=\\\"ngForm\\\" (ngSubmit)=\\\"submitClient()\\\">\\r\\n    <h2>Contact Information</h2>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"row-item col-sm-2\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Title</mat-label>\\r\\n          <input matInput placeholder=\\\"Title\\\" type=\\\"text\\\" [(ngModel)]=\\\"client.title\\\" name=\\\"title\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"row-item col-sm-5\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>First Name</mat-label>\\r\\n          <input matInput placeholder=\\\"First Name\\\" type=\\\"text\\\" [(ngModel)]=\\\"client.firstName\\\" name=\\\"first\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"row-item col-sm-5\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Last Name</mat-label>\\r\\n          <input matInput placeholder=\\\"Last Name\\\" type=\\\"text\\\" [(ngModel)]=\\\"client.lastName\\\" name=\\\"last\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"row-item col-sm-12\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Company Name</mat-label>\\r\\n          <input matInput placeholder=\\\"Company Name\\\" type=\\\"text\\\" [(ngModel)]=\\\"client.companyName\\\" name=\\\"company\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"row-item col-sm-6\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Phone</mat-label>\\r\\n          <input matInput placeholder=\\\"Phone number\\\" type=\\\"tel\\\" [(ngModel)]=\\\"client.phone\\\" name=\\\"phone\\\" (input)=\\\"phoneChange()\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"row-item col-sm-6\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Email</mat-label>\\r\\n          <input matInput placeholder=\\\"Email\\\" type=\\\"email\\\" [(ngModel)]=\\\"client.email\\\" name=\\\"email\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n  \\r\\n    <h2>Billing Address</h2>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-6 row-item\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Address 1</mat-label>\\r\\n          <input matInput placeholder=\\\"Street and number\\\" type=\\\"text\\\" [(ngModel)]=\\\"client.billingAddress.address1\\\" name=\\\"billingAddress1\\\" (input)=\\\"billingAddress1Change($event)\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-6 row-item\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Address 2</mat-label>\\r\\n          <input matInput placeholder=\\\"Suite, unit, building, floor, etc.\\\" type=\\\"text\\\" [(ngModel)]=\\\"client.billingAddress.address2\\\" name=\\\"billingAddress2\\\" (input)=\\\"billingAddress2Change($event)\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n  \\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4 row-item\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>City</mat-label>\\r\\n          <input matInput placeholder=\\\"City\\\" type=\\\"text\\\" [(ngModel)]=\\\"client.billingAddress.city\\\" name=\\\"billingCity\\\" (input)=\\\"billingCityChange($event)\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-4 row-item\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>State / Province</mat-label>\\r\\n          <input matInput placeholder=\\\"State / Province\\\" type=\\\"text\\\" [(ngModel)]=\\\"client.billingAddress.state\\\" name=\\\"billingState\\\" (input)=\\\"billingStateChange($event)\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-4 row-item\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Zip Code</mat-label>\\r\\n          <input matInput placeholder=\\\"Zip Code\\\" type=\\\"text\\\" [(ngModel)]=\\\"client.billingAddress.zipCode\\\" name=\\\"billingZipCode\\\" (input)=\\\"billingZipCodeChange($event)\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n  \\r\\n    <div class=\\\"row shipping-address-label\\\">\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        <h2>Shipping Address</h2>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-6 same-as-billing-checkbox\\\">\\r\\n        <mat-checkbox (click)=\\\"copyBilling()\\\" [(ngModel)]=\\\"sameAsBilling\\\" name=\\\"sameAsBilling\\\">Same as Billing Address</mat-checkbox>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"row-item col-sm-6\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Address 1</mat-label>\\r\\n          <input matInput placeholder=\\\"Street and number\\\" type=\\\"text\\\" [(ngModel)]=\\\"client.shippingAddress.address1\\\" name=\\\"shippingAddress1\\\" [disabled]=\\\"sameAsBilling\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-6 row-item\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Address 2</mat-label>\\r\\n          <input matInput placeholder=\\\"Suite, unit, building, floor, etc.\\\" type=\\\"text\\\" [(ngModel)]=\\\"client.shippingAddress.address2\\\" name=\\\"shippingAddress2\\\" [disabled]=\\\"sameAsBilling\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n  \\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4 row-item\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>City</mat-label>\\r\\n          <input matInput placeholder=\\\"City\\\" type=\\\"text\\\" [(ngModel)]=\\\"client.shippingAddress.city\\\" name=\\\"shippingCity\\\" [disabled]=\\\"sameAsBilling\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-4 row-item\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>State / Province</mat-label>\\r\\n          <input matInput placeholder=\\\"State / Province\\\" type=\\\"text\\\" [(ngModel)]=\\\"client.shippingAddress.state\\\" name=\\\"shippingState\\\" [disabled]=\\\"sameAsBilling\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-4 row-item\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Zip Code</mat-label>\\r\\n          <input matInput placeholder=\\\"Zip Code\\\" type=\\\"text\\\" [(ngModel)]=\\\"client.shippingAddress.zipCode\\\" name=\\\"shippingZipCode\\\" [disabled]=\\\"sameAsBilling\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\r\\n      <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"clientForm.invalid\\\">{{submitButtonText}}</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".form {\\n  margin-top: 60px;\\n  margin-bottom: 60px;\\n  max-width: 700px;\\n}\\n.form mat-form-field {\\n  display: inline;\\n}\\n.form .row-item {\\n  padding: 0 10px;\\n}\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n// Services\r\nimport { ClientService } from '../../../services/client.service';\r\n\r\n// Models\r\nimport { Client } from '../../../models/client';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-client',\r\n  templateUrl: './add-edit-client.component.html',\r\n  styleUrls: ['./add-edit-client.component.less']\r\n})\r\nexport class AddEditClientComponent implements OnInit {\r\n  client: Client;\r\n  sameAsBilling: Boolean = false;\r\n  addClientError: Boolean = false;\r\n  isAddingClient: boolean;\r\n  submitButtonText: string;\r\n\r\n  constructor(private clientService: ClientService, private router: Router, private route: ActivatedRoute) {}\r\n\r\n  ngOnInit() {\r\n    if (this.route.snapshot.params['id']) {\r\n      this.client = this.clientService.getCurrentClient();\r\n      this.isAddingClient = false;\r\n      this.submitButtonText = 'Update Client';\r\n    } else {\r\n      this.client = new Client();\r\n      this.isAddingClient = true;\r\n      this.submitButtonText = 'Add Client';\r\n    }\r\n  }\r\n\r\n  submitClient(): void {\r\n    if (this.isAddingClient) {\r\n      this.clientService.addClient(this.client);\r\n    } else {\r\n      this.clientService.updateClient(this.client);\r\n    }\r\n    // if (!this.clientService.addClient(this.client)) {\r\n    //   this.addClientError = true;\r\n    // } else {\r\n    //   this.addClientError = false;\r\n    //   this.router.navigate(['/clients']);\r\n    // }\r\n  }\r\n\r\n  copyBilling(): void {\r\n    if (!this.sameAsBilling) {\r\n      this.client.shippingAddress = { ...this.client.billingAddress };\r\n    } else {\r\n      this.client.shippingAddress.address1 = '';\r\n      this.client.shippingAddress.address2 = '';\r\n      this.client.shippingAddress.city = '';\r\n      this.client.shippingAddress.state = '';\r\n      this.client.shippingAddress.zipCode = '';\r\n    }\r\n  }\r\n\r\n  phoneChange(): void {\r\n    // ToDo: format phone\r\n  }\r\n\r\n  billingAddress1Change(event): void {\r\n    if (this.sameAsBilling) {\r\n      this.client.shippingAddress.address1 = event.target.value;\r\n    }\r\n  }\r\n\r\n  billingAddress2Change(event): void {\r\n    if (this.sameAsBilling) {\r\n      this.client.shippingAddress.address2 = event.target.value;\r\n    }\r\n  }\r\n\r\n  billingCityChange(event): void {\r\n    if (this.sameAsBilling) {\r\n      this.client.shippingAddress.city = event.target.value;\r\n    }\r\n  }\r\n\r\n  billingStateChange(event): void {\r\n    if (this.sameAsBilling) {\r\n      this.client.shippingAddress.state = event.target.value;\r\n    }\r\n  }\r\n\r\n  billingZipCodeChange(event): void {\r\n    if (this.sameAsBilling) {\r\n      this.client.shippingAddress.zipCode = event.target.value;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6 offset-md-1\\\">\\r\\n    <div class=\\\"client-detail\\\">\\r\\n      <div class=\\\"client-detail-header\\\">\\r\\n        <h2>{{client.displayName}} </h2>\\r\\n        <p>Client ID #{{client.id}}</p>\\r\\n      </div>\\r\\n      <hr class=\\\"dividing-line\\\">\\r\\n      <div class=\\\"client-detail-section\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n            <div class=\\\"client-detail-section-header\\\">\\r\\n              <h5>Billing Address</h5>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6 offset-md-1\\\">\\r\\n            <div class=\\\"client-detail-section-body\\\">\\r\\n              <p>{{client.billingAddress.address1}}</p>\\r\\n              <p *ngIf=\\\"client.billingAddress.address2\\\">{{client.billingAddress.address2}}</p>\\r\\n              <p>{{client.billingAddress.city}} {{client.billingAddress.state}} {{client.billingAddress.zipCode }}</p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"client-detail-section\\\">\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"!isBillingAndShippingSame\\\">\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n            <div class=\\\"client-detail-section-header\\\">\\r\\n              <h5>Shipping Address</h5>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6 offset-md-1\\\">\\r\\n            <div class=\\\"client-detail-section-body\\\">\\r\\n              <p>{{client.shippingAddress.address1}}</p>\\r\\n              <p *ngIf=\\\"client.billingAddress.address2\\\">{{client.billingAddress.address2}}</p>\\r\\n              <p>{{client.shippingAddress.city}} {{client.shippingAddress.state}} {{client.shippingAddress.zipcode }}</p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"client-detail-section\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n            <div class=\\\"client-detail-section-header\\\">\\r\\n              <h5>Contact Information</h5>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6 offset-md-1\\\">\\r\\n            <div class=\\\"client-detail-section-body\\\">\\r\\n              <p>\\r\\n                <span class=\\\"contact\\\">Phone:</span> {{client.phone}}</p>\\r\\n              <p>\\r\\n                <span class=\\\"contact\\\">Email:</span>\\r\\n                <a href=\\\"mailto:{{client.email}}\\\"> {{client.email}}</a>\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <hr class=\\\"dividing-line\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteClient()\\\">Delete</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"editClient()\\\">Edit</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"cold-md-4 offset-md-1\\\">\\r\\n    <div class=\\\"containers\\\">\\r\\n      <div *ngIf=\\\"client.containers; else no_containers\\\">\\r\\n        <div *ngFor=\\\"let container of client.containers\\\">\\r\\n          {{container}}\\r\\n        </div>\\r\\n      </div>\\r\\n      <ng-template #no_containers>No containers available</ng-template>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".client-detail {\\n  margin-top: 32px;\\n  background-color: #ffffff;\\n  border: 1px solid #e7e7e7;\\n  padding: 16px 32px;\\n}\\n.client-detail p {\\n  margin-bottom: 8px;\\n}\\n.client-detail .dividing-line {\\n  margin-bottom: 32px;\\n  margin-top: 32px;\\n}\\n.client-detail-header h3 {\\n  margin-top: 16px;\\n}\\n.client-detail-header p {\\n  color: #595959;\\n}\\n.client-detail-section {\\n  margin-bottom: 16px;\\n}\\n.client-detail-section .contact {\\n  font-size: 15px;\\n  font-weight: bold;\\n}\\n.containers {\\n  margin-top: 32px;\\n  padding: 16px 32px;\\n}\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n// Services\r\nimport { ClientService } from '../../../services/client.service';\r\n\r\n// Models\r\nimport { Client } from '../../../models/client';\r\n\r\n@Component({\r\n  selector: 'app-client-detail',\r\n  templateUrl: './client-detail.component.html',\r\n  styleUrls: ['./client-detail.component.less']\r\n})\r\nexport class ClientDetailComponent implements OnInit {\r\n  client: Client;\r\n  isBillingAndShippingSame: boolean;\r\n\r\n  constructor(private clientService: ClientService, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.client = this.clientService.getCurrentClient();\r\n    this.isBillingAndShippingSame = this.compareBillingAndShippingAddress();\r\n  }\r\n\r\n  compareBillingAndShippingAddress(): boolean {\r\n    return Object.is(this.client.billingAddress, this.client.shippingAddress);\r\n  }\r\n\r\n  editClient(): void {\r\n    this.router.navigate(['/add-edit-client', this.client.id]);\r\n  }\r\n\r\n  deleteClient(): void {\r\n    this.clientService.deleteClient(this.client.id);\r\n    this.router.navigate(['/clients']);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"client-list\\\" >\\r\\n  <div class=\\\"client-list-header\\\">\\r\\n    <h3>Client List</h3>\\r\\n  </div>\\r\\n  <div class=\\\"mat-elevation-z8\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n    \\r\\n      <!-- Date Column -->\\r\\n      <ng-container matColumnDef=\\\"date\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.createdDate}} </td>\\r\\n      </ng-container>\\r\\n    \\r\\n      <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"name\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.displayName}} </td>\\r\\n      </ng-container>\\r\\n    \\r\\n      <!-- Email Column -->\\r\\n      <ng-container matColumnDef=\\\"email\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\r\\n      </ng-container>\\r\\n    \\r\\n      <!-- Detail Column -->\\r\\n      <ng-container matColumnDef=\\\"actions\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header disabled> Actions </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <mat-icon matTooltip=\\\"View and Edit this company's information\\\" (click)=\\\"goToClientDetail(element)\\\">edit\\r\\n          </mat-icon>\\r\\n          <!-- <button \\r\\n              mat-raised-button matTooltip=\\\"View and Edit this company's information\\\" \\r\\n              aria-label=\\\"Button that displays a tooltip when focused or hovered over\\\"\\r\\n              (click)=\\\"goToClientDetail(element)\\\">\\r\\n              View Detail\\r\\n            </button> -->\\r\\n        </td>\\r\\n      </ng-container>\\r\\n    \\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n    \\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".client-list {\\n  margin-top: 60px;\\n  margin-bottom: 60px;\\n}\\n.client-list th.mat-sort-header-sorted {\\n  color: black;\\n}\\n.client-list mat-icon:hover {\\n  cursor: pointer;\\n  color: #3f51b5;\\n}\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort, MatTableDataSource, MatPaginator } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\n\r\n// Services\r\nimport { ClientService } from '../../../services/client.service';\r\n\r\n// Models\r\nimport { Client } from '../../../models/client';\r\n\r\n@Component({\r\n  selector: 'app-client-list',\r\n  templateUrl: './client-list.component.html',\r\n  styleUrls: ['./client-list.component.less']\r\n})\r\nexport class ClientListComponent implements OnInit {\r\n  displayedColumns: string[] = ['date', 'name', 'email', 'actions'];\r\n  dataSource: MatTableDataSource<Client>;\r\n\r\n  @ViewChild(MatSort)\r\n  sort: MatSort;\r\n  @ViewChild(MatPaginator)\r\n  paginator: MatPaginator;\r\n\r\n  constructor(private clientService: ClientService, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new MatTableDataSource(this.clientService.getClients());\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  goToClientDetail(client: Client): void {\r\n    this.clientService.setCurrentClient(client);\r\n    this.router.navigate(['/clients', client.id]);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container-list\\\" *ngIf=\\\"containerList.length > 0\\\">\\r\\n  <h5>Container List</h5>\\r\\n  <div class=\\\"container-list__table\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n      <!-- Product/Service Column -->\\r\\n      <ng-container matColumnDef=\\\"product/service\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Product/Service </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.product}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Description Column -->\\r\\n      <ng-container matColumnDef=\\\"description\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Quantity Column -->\\r\\n      <ng-container matColumnDef=\\\"quantity\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Quanity </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.quantity}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Rate Column -->\\r\\n      <ng-container matColumnDef=\\\"rate\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header disabled> Rate </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          {{element.rate}}\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Amount Column -->\\r\\n      <ng-container matColumnDef=\\\"amount\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.amount}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Actions Column -->\\r\\n      <ng-container matColumnDef=\\\"actions\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Actions </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">\\r\\n          <mat-icon matTooltip=\\\"View and edit container\\\" (click)=\\\"editContainer(element, i)\\\" class=\\\"edit-icon\\\">edit\\r\\n          </mat-icon>\\r\\n          <mat-icon matTooltip=\\\"View and edit container\\\" (click)=\\\"removeContainer(i)\\\" class=\\\"delete-icon\\\">delete\\r\\n          </mat-icon>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"add-edit-container\\\">\\r\\n  <h5>Add Container</h5>\\r\\n  <form #clientForm=\\\"ngForm\\\" (ngSubmit)=\\\"addContainer()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <mat-form-field appearance=\\\"standard\\\">\\r\\n          <mat-label>Product/Service</mat-label>\\r\\n          <input matInput type=\\\"text\\\" name=\\\"product\\\" [(ngModel)]=\\\"currentContainer.product\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-5\\\">\\r\\n        <mat-form-field appearance=\\\"standard\\\">\\r\\n          <mat-label>Description</mat-label>\\r\\n          <input matInput type=\\\"text\\\" name=\\\"description\\\" [(ngModel)]=\\\"currentContainer.description\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-1\\\">\\r\\n        <mat-form-field appearance=\\\"standard\\\">\\r\\n          <mat-label>Qty</mat-label>\\r\\n          <input matInput type=\\\"number\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"currentContainer.quantity\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-1\\\">\\r\\n        <mat-form-field appearance=\\\"standard\\\">\\r\\n          <mat-label>Rate</mat-label>\\r\\n          <input matInput type=\\\"number\\\" name=\\\"rate\\\" [(ngModel)]=\\\"currentContainer.rate\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-2\\\">\\r\\n        <mat-form-field appearance=\\\"standard\\\">\\r\\n          <mat-label>Amount</mat-label>\\r\\n          <input matInput type=\\\"number\\\" name=\\\"amount\\\" [(ngModel)]=\\\"currentContainer.amount\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Add</button>\\r\\n  </form>\\r\\n</div>\"","module.exports = \".mat-form-field {\\n  display: inline;\\n}\\n.container-item-description {\\n  background-color: aqua;\\n}\\n.container-list {\\n  margin-bottom: 16px;\\n}\\n.container-list__table {\\n  border: 1px solid grey;\\n  border-radius: 3px;\\n}\\n.container-list__table mat-icon:hover {\\n  cursor: pointer;\\n}\\n.container-list__table .edit-icon {\\n  color: #3f51b5;\\n}\\n.container-list__table .delete-icon {\\n  color: red;\\n  padding-left: 32px;\\n}\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort, MatTableDataSource, MatPaginator } from '@angular/material';\r\n\r\n// Models\r\nimport { Container } from '../../models/container';\r\n\r\n// Services\r\nimport { InvoiceService } from '../../services/invoice.service';\r\n\r\n@Component({\r\n  selector: 'app-container',\r\n  templateUrl: './container.component.html',\r\n  styleUrls: ['./container.component.less']\r\n})\r\nexport class ContainerComponent implements OnInit {\r\n  currentContainer: Container;\r\n  containerList: Container[];\r\n  containerId: number;\r\n  dataSource: MatTableDataSource<Container>;\r\n  displayedColumns: string[] = ['product/service', 'description', 'quantity', 'rate', 'amount', 'actions'];\r\n  edittingPosition: number;\r\n\r\n  @ViewChild(MatSort)\r\n  sort: MatSort;\r\n  @ViewChild(MatPaginator)\r\n  paginator: MatPaginator;\r\n\r\n  constructor(private invoiceService: InvoiceService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.currentContainer = new Container();\r\n    this.containerList = this.invoiceService.getContainerList();\r\n    this.containerId = 1;\r\n  }\r\n\r\n  addContainer(): void {\r\n    if (this.edittingPosition >= 0) {\r\n      this.containerList[this.edittingPosition] = this.currentContainer;\r\n      this.edittingPosition = -1;\r\n    } else {\r\n      this.currentContainer.id = this.containerId;\r\n      this.containerList.push(this.currentContainer);\r\n    }\r\n    this.currentContainer = new Container();\r\n    this.dataSource = new MatTableDataSource(this.containerList);\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  editContainer(element: Container, i: number): void {\r\n    this.currentContainer = element;\r\n    this.edittingPosition = i;\r\n  }\r\n\r\n  removeContainer(i: number): void {\r\n    this.containerList.splice(i, 1);\r\n    // this.invoiceService.currentInvoice.container.splice(i, 1);\r\n    this.dataSource = new MatTableDataSource(this.containerList);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"welcome\\\" fxLayout=\\\"column\\\" fxLayout.gt-md=\\\"row\\\" fxLayoutGap.gt-md=\\\"20px\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <section>\\r\\n    <h1>Activity</h1>\\r\\n    <p>Company's current activity</p>\\r\\n  </section>\\r\\n  <section>\\r\\n    <h1>Orders</h1>\\r\\n    <p>Company's most current orders</p>\\r\\n  </section>\\r\\n  <section>\\r\\n    <h1>Announcement</h1>\\r\\n    <p>Company's announcement</p>\\r\\n  </section>\\r\\n</div>\"","module.exports = \".welcome {\\n  text-align: center;\\n  margin-top: 16px;\\n}\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-welcome',\r\n  templateUrl: './welcome.component.html',\r\n  styleUrls: ['./welcome.component.less']\r\n})\r\nexport class WelcomeComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","module.exports = \"<div class=\\\"invoice\\\">\\r\\n  <div class=\\\"page-header\\\">\\r\\n    <h3>Create Invoice</h3>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <div class=\\\"contrast-container\\\">\\r\\n        <div class=\\\"form\\\">\\r\\n          <form #clientForm=\\\"ngForm\\\" (ngSubmit)=\\\"submitClient()\\\">\\r\\n            <h5>Contact Information</h5>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"row-item col-sm-12\\\">\\r\\n                <div class=\\\"client-name\\\">\\r\\n                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Company Name</mat-label>\\r\\n                    <input matInput placeholder=\\\"Company Name\\\" [(ngModel)]=\\\"testText\\\" type=\\\"text\\\"\\r\\n                      name=\\\"company\\\" (keyup)=\\\"searchClient(testText)\\\">\\r\\n                  </mat-form-field>\\r\\n                  <div class=\\\"client-list\\\" *ngIf=\\\"(searchedClients.length > 0) && isSearchingClient\\\">\\r\\n                    <ul>\\r\\n                      <li *ngFor=\\\"let client of searchedClients\\\" (click)=\\\"selectClient(client)\\\">{{client.displayName}}</li>\\r\\n                    </ul>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"row-item col-sm-2\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Title</mat-label>\\r\\n                  <input matInput placeholder=\\\"Title\\\" [(ngModel)]=\\\"invoice.client.title\\\" type=\\\"text\\\" name=\\\"title\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"row-item col-sm-5\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>First Name</mat-label>\\r\\n                  <input matInput placeholder=\\\"First Name\\\" [(ngModel)]=\\\"invoice.client.firstName\\\" type=\\\"text\\\" name=\\\"first\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"row-item col-sm-5\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Last Name</mat-label>\\r\\n                  <input matInput placeholder=\\\"Last Name\\\" [(ngModel)]=\\\"invoice.client.lastName\\\" type=\\\"text\\\" name=\\\"last\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"row-item col-sm-6\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Phone</mat-label>\\r\\n                  <input matInput placeholder=\\\"Phone number\\\" [(ngModel)]=\\\"invoice.client.phone\\\" type=\\\"tel\\\" name=\\\"phone\\\"\\r\\n                    (input)=\\\"phoneChange()\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"row-item col-sm-6\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Email</mat-label>\\r\\n                  <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"invoice.client.email\\\" type=\\\"email\\\" name=\\\"email\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <h5>Billing Address</h5>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-6 row-item\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Address 1</mat-label>\\r\\n                  <input matInput placeholder=\\\"Street and number\\\" [(ngModel)]=\\\"invoice.client.billingAddress.address1\\\"\\r\\n                    type=\\\"text\\\" name=\\\"billingAddress1\\\" (input)=\\\"billingAddress1Change($event)\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-6 row-item\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Address 2</mat-label>\\r\\n                  <input matInput placeholder=\\\"Suite, unit, building, floor, etc.\\\" [(ngModel)]=\\\"invoice.client.billingAddress.address2\\\"\\r\\n                    type=\\\"text\\\" name=\\\"billingAddress2\\\" (input)=\\\"billingAddress2Change($event)\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-4 row-item\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>City</mat-label>\\r\\n                  <input matInput placeholder=\\\"City\\\" [(ngModel)]=\\\"invoice.client.billingAddress.city\\\" type=\\\"text\\\" name=\\\"billingCity\\\"\\r\\n                    (input)=\\\"billingCityChange($event)\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-4 row-item\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>State / Province</mat-label>\\r\\n                  <input matInput placeholder=\\\"State / Province\\\" [(ngModel)]=\\\"invoice.client.billingAddress.state\\\" type=\\\"text\\\"\\r\\n                    name=\\\"billingState\\\" (input)=\\\"billingStateChange($event)\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-4 row-item\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Zip Code</mat-label>\\r\\n                  <input matInput placeholder=\\\"Zip Code\\\" [(ngModel)]=\\\"invoice.client.billingAddress.zipCode\\\" type=\\\"text\\\"\\r\\n                    name=\\\"billingZipCode\\\" (input)=\\\"billingZipCodeChange($event)\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row shipping-address-label\\\">\\r\\n              <div class=\\\"col-sm-6\\\">\\r\\n                <h5>Shipping Address</h5>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-6 same-as-billing-checkbox\\\">\\r\\n                <mat-checkbox (click)=\\\"copyBilling()\\\" name=\\\"sameAsBilling\\\">Same as Billing Address</mat-checkbox>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"row-item col-sm-6\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Address 1</mat-label>\\r\\n                  <input matInput placeholder=\\\"Street and number\\\" [(ngModel)]=\\\"invoice.client.shippingAddress.address1\\\"\\r\\n                    type=\\\"text\\\" name=\\\"shippingAddress1\\\" [disabled]=\\\"sameAsBilling\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-6 row-item\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Address 2</mat-label>\\r\\n                  <input matInput placeholder=\\\"Suite, unit, building, floor, etc.\\\" [(ngModel)]=\\\"invoice.client.shippingAddress.address2\\\"\\r\\n                    type=\\\"text\\\" name=\\\"shippingAddress2\\\" [disabled]=\\\"sameAsBilling\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-4 row-item\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>City</mat-label>\\r\\n                  <input matInput placeholder=\\\"City\\\" [(ngModel)]=\\\"invoice.client.shippingAddress.city\\\" type=\\\"text\\\" name=\\\"shippingCity\\\"\\r\\n                    [disabled]=\\\"sameAsBilling\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-4 row-item\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>State / Province</mat-label>\\r\\n                  <input matInput placeholder=\\\"State / Province\\\" [(ngModel)]=\\\"invoice.client.shippingAddress.state\\\"\\r\\n                    type=\\\"text\\\" name=\\\"shippingState\\\" [disabled]=\\\"sameAsBilling\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-4 row-item\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Zip Code</mat-label>\\r\\n                  <input matInput placeholder=\\\"Zip Code\\\" [(ngModel)]=\\\"invoice.client.shippingAddress.zipCode\\\" type=\\\"text\\\"\\r\\n                    name=\\\"shippingZipCode\\\" [disabled]=\\\"sameAsBilling\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <div class=\\\"contrast-container\\\">\\r\\n        <p>This area will be determined later</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"contrast-container\\\">\\r\\n        <app-container></app-container>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <button type=\\\"button\\\" (click)=\\\"submitInvoice()\\\">Submit Invoice</button>\\r\\n</div>\"","module.exports = \".form mat-form-field {\\n  display: inline;\\n}\\n.form .client-list {\\n  position: relative;\\n  z-index: 1;\\n  border: 1px solid gray;\\n  border-radius: 5px;\\n  background: #ffffff;\\n  width: 100%;\\n  top: -26px;\\n}\\n.form .client-list ul {\\n  -webkit-margin-after: 0;\\n          margin-block-end: 0;\\n  -webkit-padding-start: 0;\\n          padding-inline-start: 0;\\n  -webkit-padding-end: 0;\\n          padding-inline-end: 0;\\n}\\n.form .client-list ul li {\\n  list-style-type: none;\\n  padding: 4px 16px 4px;\\n}\\n.form .client-list ul li:hover {\\n  background: lightblue;\\n}\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n// Models\r\nimport { Client } from '../../../models/client';\r\nimport { Container } from '../../../models/container';\r\nimport { Invoice } from '../../../models/invoice';\r\n\r\n// Services\r\nimport { ClientService } from '../../../services/client.service';\r\nimport { InvoiceService } from '../../../services/invoice.service';\r\n\r\n// Others\r\nimport { Debounce } from '../../../helpers/debounce.helper';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n@Component({\r\n  selector: 'app-invoice-form',\r\n  templateUrl: './invoice-form.component.html',\r\n  styleUrls: ['./invoice-form.component.less']\r\n})\r\nexport class InvoiceFormComponent implements OnInit {\r\n  invoice: Invoice;\r\n  isAddingContainer: boolean;\r\n  isEditingContainer: boolean;\r\n  currentEditingIndex: number;\r\n  container: Container;\r\n\r\n  client: Client;\r\n  clientList: Client[];\r\n  searchedClients: Client[];\r\n  isSearchingClient: boolean;\r\n  testText: string;\r\n\r\n  sameAsBilling: Boolean = false;\r\n  addClientError: Boolean = false;\r\n  isAddingClient: boolean;\r\n  submitButtonText: string;\r\n\r\n  searchClient = this.debounce.debounce(\r\n    (clientName: string) => {\r\n      this.searchedClients = [];\r\n      this.isSearchingClient = true;\r\n      if (clientName === '') {\r\n        this.searchedClients = [];\r\n        this.invoice.client = new Client();\r\n      } else {\r\n        for (const client of this.clientList) {\r\n          if (client.displayName.toLocaleLowerCase().includes(clientName.toLowerCase())) {\r\n            this.searchedClients.push(client);\r\n          }\r\n        }\r\n      }\r\n      console.log('Clients:', this.searchedClients);\r\n    },\r\n    300,\r\n    false\r\n  );\r\n\r\n  constructor(\r\n    private clientService: ClientService,\r\n    private invoiceService: InvoiceService,\r\n    private debounce: Debounce\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.invoice = this.invoiceService.currentInvoice;\r\n    this.clientList = this.clientService.clientList;\r\n    this.searchedClients = [];\r\n  }\r\n\r\n  submitInvoice() {\r\n    // let invoiceNumber = 0;\r\n    // console.log(this.invoice);\r\n    // this.invoice.invoiceNumber = invoiceNumber;\r\n    // invoiceNumber++;\r\n    // this.invoiceService.addInvoice(this.invoice);\r\n    // this.invoice = new Invoice();\r\n    console.log('Container list:', this.invoiceService.currentInvoice);\r\n  }\r\n\r\n  copyBilling(): void {\r\n    if (!this.sameAsBilling) {\r\n      this.invoice.client.shippingAddress = { ...this.invoice.client.billingAddress };\r\n    } else {\r\n      this.invoice.client.shippingAddress.address1 = '';\r\n      this.invoice.client.shippingAddress.address2 = '';\r\n      this.invoice.client.shippingAddress.city = '';\r\n      this.invoice.client.shippingAddress.state = '';\r\n      this.invoice.client.shippingAddress.zipCode = '';\r\n    }\r\n  }\r\n\r\n  phoneChange(): void {\r\n    // ToDo: format phone\r\n  }\r\n\r\n  billingAddress1Change(event): void {\r\n    if (this.sameAsBilling) {\r\n      this.invoice.client.shippingAddress.address1 = event.target.value;\r\n    }\r\n  }\r\n\r\n  billingAddress2Change(event): void {\r\n    if (this.sameAsBilling) {\r\n      this.invoice.client.shippingAddress.address2 = event.target.value;\r\n    }\r\n  }\r\n\r\n  billingCityChange(event): void {\r\n    if (this.sameAsBilling) {\r\n      this.invoice.client.shippingAddress.city = event.target.value;\r\n    }\r\n  }\r\n\r\n  billingStateChange(event): void {\r\n    if (this.sameAsBilling) {\r\n      this.invoice.client.shippingAddress.state = event.target.value;\r\n    }\r\n  }\r\n\r\n  billingZipCodeChange(event): void {\r\n    if (this.sameAsBilling) {\r\n      this.invoice.client.shippingAddress.zipCode = event.target.value;\r\n    }\r\n  }\r\n\r\n  selectClient(client: Client): void {\r\n    this.isSearchingClient = false;\r\n    this.testText = client.displayName;\r\n    this.invoice.client = client;\r\n  }\r\n}\r\n","module.exports = \"<p>\\r\\n  invoice-list works!\\r\\n</p>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-invoice-list',\r\n  templateUrl: './invoice-list.component.html',\r\n  styleUrls: ['./invoice-list.component.less']\r\n})\r\nexport class InvoiceListComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <div fxHide.gt-xs>\\r\\n    <button mat-icon-button (click)=\\\"onToggleSideNav()\\\">\\r\\n      <mat-icon>menu</mat-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div>\\r\\n    <a routerLink=\\\"/\\\">LOGO</a>\\r\\n  </div>\\r\\n  <div fxFlex fxLayout fxLayoutAlign=\\\"flex-end\\\" fxHide.xs>\\r\\n    <ul fxLayout fxLayoutGap=\\\"10px\\\" class=\\\"navigation-items\\\">\\r\\n      <li>\\r\\n        <a mat-list-item [matMenuTriggerFor]=\\\"invoice\\\">Invoices</a>\\r\\n        <mat-menu #invoice=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\r\\n          <button mat-menu-item (click)=\\\"onClose('/invoices')\\\">Invoices</button>\\r\\n          <button mat-menu-item (click)=\\\"onClose('/add-edit-invoice')\\\">New Invoice</button>\\r\\n        </mat-menu>\\r\\n      </li>\\r\\n      <li>\\r\\n        <a mat-list-item [matMenuTriggerFor]=\\\"client\\\">Clients</a>\\r\\n        <mat-menu #client=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\r\\n          <button mat-menu-item (click)=\\\"onClose('/clients')\\\">Clients</button>\\r\\n          <button mat-menu-item (click)=\\\"onClose('/add-edit-client')\\\">New Client</button>\\r\\n        </mat-menu>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</mat-toolbar>\"","module.exports = \"a {\\n  text-decoration: none;\\n  color: #ffffff;\\n}\\na:hover,\\na:active {\\n  color: lightgray;\\n  cursor: pointer;\\n}\\n.navigation-items {\\n  list-style: none;\\n  padding: 0;\\n  margin: 0;\\n}\\n.nav-caption {\\n  display: inline-block;\\n  padding-left: 8px;\\n}\\n\"","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.less']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  @Output()\r\n  sideNavToggle = new EventEmitter<void>();\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  onToggleSideNav() {\r\n    this.sideNavToggle.emit();\r\n  }\r\n\r\n  onClose(path: string): void {\r\n    this.router.navigate([`${path}`]);\r\n  }\r\n}\r\n","module.exports = \"<mat-nav-list>\\r\\n  <a mat-list-item (click)=\\\"navListSectionClicked('invoice')\\\">\\r\\n    <p>Invoices</p>\\r\\n    <span *ngIf=\\\"this.currentSelection === 'invoice' && !expandable\\\" class=\\\"drop-down-icon\\\"><mat-icon>expand_more</mat-icon></span>\\r\\n    <span *ngIf=\\\"this.currentSelection === 'invoice' && expandable\\\" class=\\\"drop-down-icon\\\"><mat-icon>expand_less</mat-icon></span>\\r\\n  </a>\\r\\n  <div *ngIf=\\\"this.currentSelection === 'invoice' && expandable\\\">\\r\\n    <div class=\\\"sub-navbar\\\">\\r\\n      <p class=\\\"sub-navbar-title\\\">Invoices</p>\\r\\n    </div>\\r\\n    <div class=\\\"sub-navbar\\\">\\r\\n      <p class=\\\"sub-navbar-title\\\">New Invoice</p>\\r\\n    </div>\\r\\n  </div>\\r\\n  <a mat-list-item (click)=\\\"navListSectionClicked('client')\\\">\\r\\n    <p>Clients</p>\\r\\n    <span *ngIf=\\\"this.currentSelection === 'client' && !expandable\\\" class=\\\"drop-down-icon\\\"><mat-icon>expand_more</mat-icon></span>\\r\\n    <span *ngIf=\\\"this.currentSelection === 'client' && expandable\\\" class=\\\"drop-down-icon\\\"><mat-icon>expand_less</mat-icon></span>\\r\\n  </a>\\r\\n  <div *ngIf=\\\"this.currentSelection === 'client' && expandable\\\">\\r\\n    <div class=\\\"sub-navbar\\\" (click)=\\\"onClose('/clients')\\\">\\r\\n      <p class=\\\"sub-navbar-title\\\">Client List</p>\\r\\n    </div>\\r\\n    <div class=\\\"sub-navbar\\\" (click)=\\\"onClose('/add-edit-client')\\\">\\r\\n      <p class=\\\"sub-navbar-title\\\">New Client</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</mat-nav-list>\"","module.exports = \"a {\\n  text-decoration: none;\\n  color: #ffffff;\\n}\\na p {\\n  margin-bottom: 0;\\n  width: 90%;\\n}\\na .drop-down-icon {\\n  padding-top: 8px;\\n}\\n.sub-navbar {\\n  padding-bottom: 4px;\\n}\\n.sub-navbar:hover {\\n  background-color: #f8f9fa;\\n}\\n.sub-navbar .sub-navbar-title {\\n  margin-left: 32px;\\n  margin-bottom: 0;\\n}\\n\"","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-sidenav-list',\r\n  templateUrl: './sidenav-list.component.html',\r\n  styleUrls: ['./sidenav-list.component.less']\r\n})\r\nexport class SidenavListComponent implements OnInit {\r\n  @Output()\r\n  closeSideNav = new EventEmitter<void>();\r\n  expandable: boolean;\r\n  currentSelection: string;\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.expandable = false;\r\n  }\r\n\r\n  onClose(path: string): void {\r\n    this.closeSideNav.emit();\r\n    this.router.navigate([`${path}`]);\r\n  }\r\n\r\n  navListSectionClicked(selection: string): void {\r\n    console.log('David Tram');\r\n    this.expandable = !this.expandable;\r\n    this.currentSelection = selection;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class Debounce {\r\n  // tslint:disable-next-line\r\n  debounce(func: any, wait: any, immediate: any) {\r\n    let timeout: any; // tslint:disable-line\r\n    return function(): void {\r\n      const context = this,\r\n        args = arguments;\r\n      const later = () => {\r\n        timeout = null;\r\n        if (!immediate) {\r\n          func.apply(context, args);\r\n        }\r\n      };\r\n      const callNow = immediate && !timeout;\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(later, wait);\r\n      if (callNow) {\r\n        func.apply(context, args);\r\n      }\r\n    };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport {\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatCheckboxModule,\r\n  MatSidenavModule,\r\n  MatToolbarModule,\r\n  MatListModule,\r\n  MatCardModule,\r\n  MatTableModule,\r\n  MatTooltipModule,\r\n  MatSortModule,\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonToggleModule,\r\n  MatChipsModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatMenuModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatStepperModule,\r\n  MatTabsModule,\r\n  MatTreeModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatCheckboxModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatTooltipModule,\r\n    MatSortModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonToggleModule,\r\n    MatChipsModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatMenuModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatTreeModule\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatCheckboxModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatTooltipModule,\r\n    MatSortModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonToggleModule,\r\n    MatChipsModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatMenuModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatTreeModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n","export class Address {\r\n  address1: string;\r\n  address2?: string;\r\n  city: string;\r\n  state: string;\r\n  zipCode: string;\r\n  country?: string;\r\n\r\n  constructor() {\r\n    this.address1 = '';\r\n    this.address2 = '';\r\n    this.city = '';\r\n    this.state = '';\r\n    this.zipCode = '';\r\n  }\r\n}\r\n","import { Address } from './address';\r\n\r\nexport class Client {\r\n  id?: string;\r\n  title?: string;\r\n  companyName?: string;\r\n  displayName: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  middleName?: string;\r\n  suffix?: string;\r\n  email: string;\r\n  phone: string;\r\n  mobilePhone?: string;\r\n  fax?: string;\r\n  otherContactInfo?: string;\r\n  website?: string;\r\n  nameOnCheck: string;\r\n  isSubCustomer?: boolean;\r\n  subCustomerParentName?: string;\r\n  subCustomerBillWithParent?: string;\r\n  billingAddress: Address;\r\n  shippingAddress: Address;\r\n  createdDate?: Date;\r\n  updatedDate?: Date;\r\n  containers?: string[];\r\n\r\n  constructor() {\r\n    this.displayName = '';\r\n    this.firstName = '';\r\n    this.lastName = '';\r\n    this.email = '';\r\n    this.phone = '';\r\n    this.nameOnCheck = '';\r\n    this.billingAddress = new Address();\r\n    this.shippingAddress = new Address();\r\n  }\r\n}\r\n","export class Container {\r\n  id: number;\r\n  product: string;\r\n  description?: string;\r\n  quantity: number;\r\n  rate: number;\r\n  amount: number;\r\n  constructor() {\r\n    this.id = null;\r\n    this.product = null;\r\n    this.quantity = null;\r\n    this.rate = null;\r\n    this.amount = null;\r\n  }\r\n}\r\n","import { Container } from './container';\r\nimport { Client } from './client';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport class Invoice {\r\n  invoiceNumber: string;\r\n  client: Client;\r\n  container: Container[];\r\n  constructor() {\r\n    this.invoiceNumber = uuid();\r\n    this.client = new Client();\r\n    this.container = [];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n// Models\r\nimport { Client } from '../models/client';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientService {\r\n  // Later clientList will be catched after a GET clientList request is made. Any thing relies on\r\n  // clientList will check the cach first before making a new request\r\n  clientList: Client[] = [\r\n    {\r\n      id: '1',\r\n      displayName: 'Bau',\r\n      firstName: 'Daniel',\r\n      lastName: 'Frank',\r\n      email: 'danielf@gmail.com',\r\n      phone: '3109721234',\r\n      nameOnCheck: 'Company A',\r\n      billingAddress: {\r\n        address1: '123 Main St',\r\n        address2: 'Suite #135',\r\n        city: 'Carson',\r\n        state: 'CA',\r\n        zipCode: '92345',\r\n        country: 'US'\r\n      },\r\n      shippingAddress: {\r\n        address1: '9802 Western St',\r\n        city: 'Hawthorne',\r\n        state: 'CA',\r\n        zipCode: '90001'\r\n      },\r\n      createdDate: new Date('2015-04-25'),\r\n      updatedDate: new Date('2015-03-25')\r\n    },\r\n    {\r\n      id: '2',\r\n      displayName: 'Hao',\r\n      firstName: 'David',\r\n      lastName: 'Muller',\r\n      email: 'davidm@gmail.com',\r\n      phone: '3109725678',\r\n      nameOnCheck: 'Company B',\r\n      billingAddress: {\r\n        address1: '456 Western St',\r\n        address2: 'Suite #123',\r\n        city: 'Hawthorne',\r\n        state: 'CA',\r\n        zipCode: '96789',\r\n        country: 'US'\r\n      },\r\n      shippingAddress: {\r\n        address1: '456 Western St',\r\n        address2: 'Suite #333',\r\n        city: 'Hawthorne',\r\n        state: 'CA',\r\n        zipCode: '96789',\r\n        country: 'US'\r\n      },\r\n      createdDate: new Date('2015-04-25'),\r\n      updatedDate: new Date('2015-03-25')\r\n    },\r\n    {\r\n      id: '3',\r\n      displayName: 'Cuong',\r\n      firstName: 'Tin',\r\n      lastName: 'Authur',\r\n      email: 'tint@gmail.com',\r\n      phone: '3109729010',\r\n      nameOnCheck: 'Company C',\r\n      billingAddress: {\r\n        address1: '789 Marine St',\r\n        address2: 'Suite #444',\r\n        city: 'Irvine',\r\n        state: 'CA',\r\n        zipCode: '99012',\r\n        country: 'US'\r\n      },\r\n      shippingAddress: {\r\n        address1: '789 Marine St',\r\n        address2: 'Suite #687',\r\n        city: 'Irvine',\r\n        state: 'CA',\r\n        zipCode: '99012',\r\n        country: 'US'\r\n      },\r\n      createdDate: new Date('2015-05-23'),\r\n      updatedDate: new Date('2015-03-25')\r\n    },\r\n    {\r\n      id: '4',\r\n      displayName: 'Khuong',\r\n      firstName: 'David',\r\n      lastName: 'Muller',\r\n      email: 'davidm@gmail.com',\r\n      phone: '3109725678',\r\n      nameOnCheck: 'Company B',\r\n      billingAddress: {\r\n        address1: '456 Western St',\r\n        city: 'Hawthorne',\r\n        state: 'CA',\r\n        zipCode: '96789'\r\n      },\r\n      shippingAddress: {\r\n        address1: '456 Western St',\r\n        city: 'Hawthorne',\r\n        state: 'CA',\r\n        zipCode: '96789'\r\n      },\r\n      createdDate: new Date('2015-01-02'),\r\n      updatedDate: new Date('2015-03-25')\r\n    },\r\n    {\r\n      id: '5',\r\n      displayName: 'Tin',\r\n      firstName: 'David',\r\n      lastName: 'Muller',\r\n      email: 'davidm@gmail.com',\r\n      phone: '3109725678',\r\n      nameOnCheck: 'Company B',\r\n      billingAddress: {\r\n        address1: '456 Western St',\r\n        city: 'Hawthorne',\r\n        state: 'CA',\r\n        zipCode: '96789'\r\n      },\r\n      shippingAddress: {\r\n        address1: '456 Western St',\r\n        city: 'Hawthorne',\r\n        state: 'CA',\r\n        zipCode: '96789'\r\n      },\r\n      createdDate: new Date('2014-02-24'),\r\n      updatedDate: new Date('2015-03-25')\r\n    },\r\n    {\r\n      id: '6',\r\n      displayName: 'Vu',\r\n      firstName: 'David',\r\n      lastName: 'Muller',\r\n      email: 'davidm@gmail.com',\r\n      phone: '3109725678',\r\n      nameOnCheck: 'Company B',\r\n      billingAddress: {\r\n        address1: '456 Western St',\r\n        city: 'Hawthorne',\r\n        state: 'CA',\r\n        zipCode: '96789'\r\n      },\r\n      shippingAddress: {\r\n        address1: '456 Western St',\r\n        city: 'Hawthorne',\r\n        state: 'CA',\r\n        zipCode: '96789'\r\n      },\r\n      createdDate: new Date('2015-03-25'),\r\n      updatedDate: new Date('2015-03-25')\r\n    },\r\n    {\r\n      id: '7',\r\n      displayName: 'Vinh',\r\n      firstName: 'David',\r\n      lastName: 'Muller',\r\n      email: 'davidm@gmail.com',\r\n      phone: '3109725678',\r\n      nameOnCheck: 'Company B',\r\n      billingAddress: {\r\n        address1: '456 Western St',\r\n        city: 'Hawthorne',\r\n        state: 'CA',\r\n        zipCode: '96789'\r\n      },\r\n      shippingAddress: {\r\n        address1: '456 Western St',\r\n        city: 'Hawthorne',\r\n        state: 'CA',\r\n        zipCode: '96789'\r\n      },\r\n      createdDate: new Date('2015-03-25'),\r\n      updatedDate: new Date('2015-03-25')\r\n    }\r\n  ];\r\n  currentClient: Client;\r\n  constructor(private router: Router) {}\r\n\r\n  getClients(): Client[] {\r\n    return this.clientList;\r\n  }\r\n\r\n  setCurrentClient(client: Client): void {\r\n    this.currentClient = client;\r\n  }\r\n\r\n  getCurrentClient(): Client {\r\n    if (!this.currentClient) {\r\n      this.router.navigate(['/clients']);\r\n      return;\r\n    }\r\n    return this.currentClient;\r\n  }\r\n\r\n  // Update this function to make http request to delete cleint\r\n  deleteClient(id: string): void {\r\n    this.clientList = this.clientList.filter(client => {\r\n      return client.id !== id;\r\n    });\r\n  }\r\n  addClient(client: Client): boolean {\r\n    this.clientList.push(client);\r\n    return true; // change later when using a real db\r\n  }\r\n\r\n  updateClient(client: Client): boolean {\r\n    this.clientList.push(client);\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n// Models\r\nimport { Invoice } from '../models/invoice';\r\nimport { Container } from '../models/container';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InvoiceService {\r\n  currentInvoice: Invoice;\r\n  invoices: Invoice[];\r\n  constructor() {\r\n    console.log('service invoice');\r\n    this.currentInvoice = new Invoice();\r\n  }\r\n\r\n  addInvoice(invoice: Invoice): void {\r\n    console.log('Submited Invoice:', invoice);\r\n  }\r\n\r\n  addContainer(container: Container): void {\r\n    this.currentInvoice.container.push(container);\r\n    console.log(this.currentInvoice.container);\r\n  }\r\n\r\n  getContainerList(): Container[] {\r\n    return this.currentInvoice.container;\r\n  }\r\n\r\n  getCurrentInvoice(): Invoice {\r\n    return this.currentInvoice;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\n// 3rd Party Lib.\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}